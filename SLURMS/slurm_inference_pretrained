#!/bin/bash

#SBATCH --partition=slowlane
#SBATCH --gpus=A40:1
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=16
#SBATCH --mem=60G
#SBATCH --time=0-01:00:00
#SBATCH --output=%u_musicgen_infer_%j.out
#SBATCH --job-name=musicgen-infer
#SBATCH --mail-user=selimelbindary@gmail.com
#SBATCH --mail-type=END,FAIL

# === 1. Load Conda environment ===
module purge
module load Miniconda3
source ${EBROOTMINICONDA3}/bin/activate
conda activate musicgen

# === 2. Set up working directory ===
cd "$SCRATCH_DIR"

echo "üìÅ Copying audiocraft repo to scratch..."
rm -rf $SCRATCH_DIR/audiocraft
cp -r /mnt/beegfs/home/gs113316/audiocraft $SCRATCH_DIR/

echo "üì¶ Copying test audio..."
mkdir -p $SCRATCH_DIR/test_data
cp /mnt/beegfs/home/gs113316/test_data/test4.wav $SCRATCH_DIR/test_data/

echo "üéØ Copying fine-tuned checkpoint..."
mkdir -p $SCRATCH_DIR/checkpoints
cp /mnt/beegfs/home/gs113316/experiments/audiocraft/finetuning_full_text_genre4/xps/12233d6d/checkpoint_13.th $SCRATCH_DIR/checkpoints/
rm -rf $SCRATCH_DIR/inference_finetune4
mkdir -p $SCRATCH_DIR/inference_finetune4
# === 3. Run inference ===
cd $SCRATCH_DIR/audiocraft

echo "üêç Running melody-only inference at 32 kHz..."
python audiocraft/generate_pretrained.py \
  --melody $SCRATCH_DIR/test_data/test4.wav \
  --description "Generate Rock Music" \
  --output_dir $SCRATCH_DIR/inference_finetune4 \
  > /mnt/beegfs/home/gs113316/selim/vocal2music_inference.log 2>&1

# === 4. Copy outputs back to BeeGFS ===
if [ -d "$SCRATCH_DIR/inference_output" ]; then
  echo "‚úÖ Copying generated audio to BeeGFS..."
  mkdir -p /mnt/beegfs/home/gs113316/experiments/audiocraft/pretrained/test4
  rsync -av "$SCRATCH_DIR/inference_finetune4/" /mnt/beegfs/home/gs113316/experiments/audiocraft/pretrained/test4/
else
  echo "‚ö†Ô∏è No outputs found ‚Äî inference may have failed."
fi
